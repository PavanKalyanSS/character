{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React Project\\\\swapi\\\\src\\\\components\\\\CharacterList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, SimpleGrid, Button, Flex, useToast, Text } from '@chakra-ui/react';\nimport axios from 'axios';\nimport CharacterCard from './CharacterCard ';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharactersList = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState(1);\n  const toast = useToast();\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      const response = await axios.get(`https://swapi.dev/api/people/?page=${page}`);\n      setCharacters(response.data.results);\n      window.scrollTo(0, 0); // Scroll to top when page changes\n    };\n    fetchCharacters();\n  }, [page]);\n  const handleFavorite = character => {\n    // Check if the character is already in favorites\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    const isAlreadyFavorited = favorites.some(fav => fav.url === character.url);\n    if (isAlreadyFavorited) {\n      toast({\n        title: 'Character already favorited',\n        status: 'info',\n        duration: 2000,\n        isClosable: true\n      });\n    } else {\n      // Add character to favorites\n      const updatedFavorites = [...favorites, character];\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n\n      // Update state or trigger a re-render to reflect the change\n      toast({\n        title: 'Character added to favorites',\n        status: 'success',\n        duration: 2000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: [1, 2, 3, 4],\n      spacing: 8,\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        character: character,\n        onFavorite: handleFavorite,\n        showRemoveButton: false\n        // Adjusting card width and margin\n        ,\n        minWidth: \"250px\",\n        width: \"100%\",\n        margin: \"auto\"\n      }, character.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      mt: 8,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        onClick: () => setPage(page - 1),\n        disabled: page === 1,\n        mx: 2,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mx: 4,\n        children: [\"Page \", page]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"teal\",\n        onClick: () => setPage(page + 1),\n        mx: 2,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CharactersList, \"FShICq3eZWusODr6V2qvv/TOIZc=\", false, function () {\n  return [useToast];\n});\n_c = CharactersList;\nexport default CharactersList;\nvar _c;\n$RefreshReg$(_c, \"CharactersList\");","map":{"version":3,"names":["React","useState","useEffect","Box","SimpleGrid","Button","Flex","useToast","Text","axios","CharacterCard","jsxDEV","_jsxDEV","CharactersList","_s","characters","setCharacters","page","setPage","toast","fetchCharacters","response","get","data","results","window","scrollTo","handleFavorite","character","favorites","JSON","parse","localStorage","getItem","isAlreadyFavorited","some","fav","url","title","status","duration","isClosable","updatedFavorites","setItem","stringify","p","children","columns","spacing","map","onFavorite","showRemoveButton","minWidth","width","margin","fileName","_jsxFileName","lineNumber","columnNumber","mt","justifyContent","alignItems","colorScheme","onClick","disabled","mx","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/React Project/swapi/src/components/CharacterList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, SimpleGrid, Button, Flex, useToast, Text } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport CharacterCard from './CharacterCard ';\r\n\r\nconst CharactersList = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      const response = await axios.get(`https://swapi.dev/api/people/?page=${page}`);\r\n      setCharacters(response.data.results);\r\n      window.scrollTo(0, 0); // Scroll to top when page changes\r\n    };\r\n    fetchCharacters();\r\n  }, [page]);\r\n\r\n  const handleFavorite = (character) => {\r\n    // Check if the character is already in favorites\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    const isAlreadyFavorited = favorites.some(fav => fav.url === character.url);\r\n\r\n    if (isAlreadyFavorited) {\r\n      toast({\r\n        title: 'Character already favorited',\r\n        status: 'info',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      // Add character to favorites\r\n      const updatedFavorites = [...favorites, character];\r\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n\r\n      // Update state or trigger a re-render to reflect the change\r\n      toast({\r\n        title: 'Character added to favorites',\r\n        status: 'success',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <SimpleGrid columns={[1, 2, 3, 4]} spacing={8}>\r\n        {characters.map(character => (\r\n          <CharacterCard\r\n            key={character.url}\r\n            character={character}\r\n            onFavorite={handleFavorite}\r\n            showRemoveButton={false}\r\n            // Adjusting card width and margin\r\n            minWidth=\"250px\"\r\n            width=\"100%\"\r\n            margin=\"auto\"\r\n          />\r\n        ))}\r\n      </SimpleGrid>\r\n      <Flex mt={8} justifyContent=\"center\" alignItems=\"center\">\r\n        <Button \r\n          colorScheme=\"teal\" \r\n          onClick={() => setPage(page - 1)} \r\n          disabled={page === 1}\r\n          mx={2}\r\n        >\r\n          Previous\r\n        </Button>\r\n        <Text mx={4}>Page {page}</Text>\r\n        <Button \r\n          colorScheme=\"teal\" \r\n          onClick={() => setPage(page + 1)} \r\n          mx={2}\r\n        >\r\n          Next\r\n        </Button>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharactersList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}