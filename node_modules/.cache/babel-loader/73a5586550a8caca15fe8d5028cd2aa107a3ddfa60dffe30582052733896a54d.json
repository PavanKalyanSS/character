{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React Project\\\\swapi\\\\src\\\\components\\\\CharacterList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, SimpleGrid, Button, Flex, useToast, Text, Spinner } from '@chakra-ui/react';\nimport axios from 'axios';\nimport CharacterCard from './CharacterCard ';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharactersList = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(true); // State to manage loading state\n  const toast = useToast();\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      setLoading(true); // Set loading to true when fetching data\n      const response = await axios.get(`https://swapi.dev/api/people/?page=${page}`);\n      setCharacters(response.data.results);\n      setLoading(false); // Set loading to false after data is fetched\n      window.scrollTo(0, 0); // Scroll to top when page changes\n    };\n    fetchCharacters();\n  }, [page]);\n  const handleFavorite = character => {\n    // Check if the character is already in favorites\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    const isAlreadyFavorited = favorites.some(fav => fav.url === character.url);\n    if (isAlreadyFavorited) {\n      toast({\n        title: 'Character already favorited',\n        status: 'info',\n        duration: 2000,\n        isClosable: true\n      });\n    } else {\n      // Add character to favorites\n      const updatedFavorites = [...favorites, character];\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n\n      // Update state or trigger a re-render to reflect the change\n      toast({\n        title: 'Character added to favorites',\n        status: 'success',\n        duration: 2000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: loading ?\n    /*#__PURE__*/\n    // Display spinner while loading\n    _jsxDEV(Flex, {\n      justify: \"center\",\n      align: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: [1, 2, 3, 4],\n        spacing: 8,\n        children: characters.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n          character: character,\n          onFavorite: handleFavorite,\n          showRemoveButton: false\n          // Adjusting card width and margin\n          ,\n          minWidth: \"250px\",\n          width: \"100%\",\n          margin: \"auto\"\n        }, character.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mt: 8,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          onClick: () => setPage(page - 1),\n          disabled: page === 1,\n          mx: 2,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mx: 4,\n          children: [\"Page \", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          onClick: () => setPage(page + 1),\n          mx: 2,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CharactersList, \"sVvI5xTeP2UHx75D3ZVilBjcbIU=\", false, function () {\n  return [useToast];\n});\n_c = CharactersList;\nexport default CharactersList;\nvar _c;\n$RefreshReg$(_c, \"CharactersList\");","map":{"version":3,"names":["React","useState","useEffect","Box","SimpleGrid","Button","Flex","useToast","Text","Spinner","axios","CharacterCard","jsxDEV","_jsxDEV","Fragment","_Fragment","CharactersList","_s","characters","setCharacters","page","setPage","loading","setLoading","toast","fetchCharacters","response","get","data","results","window","scrollTo","handleFavorite","character","favorites","JSON","parse","localStorage","getItem","isAlreadyFavorited","some","fav","url","title","status","duration","isClosable","updatedFavorites","setItem","stringify","p","children","justify","align","minHeight","size","fileName","_jsxFileName","lineNumber","columnNumber","columns","spacing","map","onFavorite","showRemoveButton","minWidth","width","margin","mt","justifyContent","alignItems","colorScheme","onClick","disabled","mx","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/React Project/swapi/src/components/CharacterList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, SimpleGrid, Button, Flex, useToast, Text, Spinner } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport CharacterCard from './CharacterCard ';\r\n\r\nconst CharactersList = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(true); // State to manage loading state\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      setLoading(true); // Set loading to true when fetching data\r\n      const response = await axios.get(`https://swapi.dev/api/people/?page=${page}`);\r\n      setCharacters(response.data.results);\r\n      setLoading(false); // Set loading to false after data is fetched\r\n      window.scrollTo(0, 0); // Scroll to top when page changes\r\n    };\r\n    fetchCharacters();\r\n  }, [page]);\r\n\r\n  const handleFavorite = (character) => {\r\n    // Check if the character is already in favorites\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    const isAlreadyFavorited = favorites.some(fav => fav.url === character.url);\r\n\r\n    if (isAlreadyFavorited) {\r\n      toast({\r\n        title: 'Character already favorited',\r\n        status: 'info',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      // Add character to favorites\r\n      const updatedFavorites = [...favorites, character];\r\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n\r\n      // Update state or trigger a re-render to reflect the change\r\n      toast({\r\n        title: 'Character added to favorites',\r\n        status: 'success',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      {loading ? ( // Display spinner while loading\r\n        <Flex justify=\"center\" align=\"center\" minHeight=\"200px\">\r\n          <Spinner size=\"xl\" />\r\n        </Flex>\r\n      ) : (\r\n        <>\r\n          <SimpleGrid columns={[1, 2, 3, 4]} spacing={8}>\r\n            {characters.map(character => (\r\n              <CharacterCard\r\n                key={character.url}\r\n                character={character}\r\n                onFavorite={handleFavorite}\r\n                showRemoveButton={false}\r\n                // Adjusting card width and margin\r\n                minWidth=\"250px\"\r\n                width=\"100%\"\r\n                margin=\"auto\"\r\n              />\r\n            ))}\r\n          </SimpleGrid>\r\n          <Flex mt={8} justifyContent=\"center\" alignItems=\"center\">\r\n            <Button \r\n              colorScheme=\"teal\" \r\n              onClick={() => setPage(page - 1)} \r\n              disabled={page === 1}\r\n              mx={2}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <Text mx={4}>Page {page}</Text>\r\n            <Button \r\n              colorScheme=\"teal\" \r\n              onClick={() => setPage(page + 1)} \r\n              mx={2}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Flex>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharactersList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,OAAO,QAAQ,kBAAkB;AACzF,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAMuB,KAAK,GAAGjB,QAAQ,CAAC,CAAC;EAExBL,SAAS,CAAC,MAAM;IACd,MAAMuB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClCF,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,MAAMG,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,sCAAsCP,IAAI,EAAE,CAAC;MAC9ED,aAAa,CAACO,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACpCN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACnBO,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACDN,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,MAAMY,cAAc,GAAIC,SAAS,IAAK;IACpC;IACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IACrE,MAAMC,kBAAkB,GAAGL,SAAS,CAACM,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,GAAG,KAAKT,SAAS,CAACS,GAAG,CAAC;IAE3E,IAAIH,kBAAkB,EAAE;MACtBf,KAAK,CAAC;QACJmB,KAAK,EAAE,6BAA6B;QACpCC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACA,MAAMC,gBAAgB,GAAG,CAAC,GAAGb,SAAS,EAAED,SAAS,CAAC;MAClDI,YAAY,CAACW,OAAO,CAAC,WAAW,EAAEb,IAAI,CAACc,SAAS,CAACF,gBAAgB,CAAC,CAAC;;MAEnE;MACAvB,KAAK,CAAC;QACJmB,KAAK,EAAE,8BAA8B;QACrCC,MAAM,EAAE,SAAS;QACjBC,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEjC,OAAA,CAACV,GAAG;IAAC+C,CAAC,EAAE,CAAE;IAAAC,QAAA,EACP7B,OAAO;IAAA;IAAK;IACXT,OAAA,CAACP,IAAI;MAAC8C,OAAO,EAAC,QAAQ;MAACC,KAAK,EAAC,QAAQ;MAACC,SAAS,EAAC,OAAO;MAAAH,QAAA,eACrDtC,OAAA,CAACJ,OAAO;QAAC8C,IAAI,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,gBAEP9C,OAAA,CAAAE,SAAA;MAAAoC,QAAA,gBACEtC,OAAA,CAACT,UAAU;QAACwD,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAACC,OAAO,EAAE,CAAE;QAAAV,QAAA,EAC3CjC,UAAU,CAAC4C,GAAG,CAAC7B,SAAS,iBACvBpB,OAAA,CAACF,aAAa;UAEZsB,SAAS,EAAEA,SAAU;UACrB8B,UAAU,EAAE/B,cAAe;UAC3BgC,gBAAgB,EAAE;UAClB;UAAA;UACAC,QAAQ,EAAC,OAAO;UAChBC,KAAK,EAAC,MAAM;UACZC,MAAM,EAAC;QAAM,GAPRlC,SAAS,CAACS,GAAG;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQnB,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ,CAAC,eACb9C,OAAA,CAACP,IAAI;QAAC8D,EAAE,EAAE,CAAE;QAACC,cAAc,EAAC,QAAQ;QAACC,UAAU,EAAC,QAAQ;QAAAnB,QAAA,gBACtDtC,OAAA,CAACR,MAAM;UACLkE,WAAW,EAAC,MAAM;UAClBC,OAAO,EAAEA,CAAA,KAAMnD,OAAO,CAACD,IAAI,GAAG,CAAC,CAAE;UACjCqD,QAAQ,EAAErD,IAAI,KAAK,CAAE;UACrBsD,EAAE,EAAE,CAAE;UAAAvB,QAAA,EACP;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9C,OAAA,CAACL,IAAI;UAACkE,EAAE,EAAE,CAAE;UAAAvB,QAAA,GAAC,OAAK,EAAC/B,IAAI;QAAA;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/B9C,OAAA,CAACR,MAAM;UACLkE,WAAW,EAAC,MAAM;UAClBC,OAAO,EAAEA,CAAA,KAAMnD,OAAO,CAACD,IAAI,GAAG,CAAC,CAAE;UACjCsD,EAAE,EAAE,CAAE;UAAAvB,QAAA,EACP;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,eACP;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAxFID,cAAc;EAAA,QAIJT,QAAQ;AAAA;AAAAoE,EAAA,GAJlB3D,cAAc;AA0FpB,eAAeA,cAAc;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}