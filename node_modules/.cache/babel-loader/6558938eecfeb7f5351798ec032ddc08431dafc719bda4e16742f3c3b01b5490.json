{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,SimpleGrid,Button,Flex,useToast,Text,Spinner}from'@chakra-ui/react';import axios from'axios';import CharacterCard from'./CharacterCard ';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const CharactersList=()=>{const[characters,setCharacters]=useState([]);const[page,setPage]=useState(1);const[loading,setLoading]=useState(true);// State to manage loading state\nconst toast=useToast();useEffect(()=>{const fetchCharacters=async()=>{setLoading(true);// Set loading to true when fetching data\nconst response=await axios.get(\"https://swapi.dev/api/people/?page=\".concat(page));setCharacters(response.data.results);setLoading(false);// Set loading to false after data is fetched\nwindow.scrollTo(0,0);// Scroll to top when page changes\n};fetchCharacters();},[page]);const handleFavorite=character=>{// Check if the character is already in favorites\nconst favorites=JSON.parse(localStorage.getItem('favorites'))||[];const isAlreadyFavorited=favorites.some(fav=>fav.url===character.url);if(isAlreadyFavorited){toast({title:'Character already favorited',status:'info',duration:2000,isClosable:true});}else{// Add character to favorites\nconst updatedFavorites=[...favorites,character];localStorage.setItem('favorites',JSON.stringify(updatedFavorites));// Update state or trigger a re-render to reflect the change\ntoast({title:'Character added to favorites',status:'success',duration:2000,isClosable:true});}};return/*#__PURE__*/_jsx(Box,{p:4,children:loading?/*#__PURE__*/ // Display spinner while loading\n_jsx(Flex,{justify:\"center\",align:\"center\",minHeight:\"200px\",children:/*#__PURE__*/_jsx(Spinner,{size:\"xl\"})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(SimpleGrid,{columns:[1,2,3,4],spacing:8,children:characters.map(character=>/*#__PURE__*/_jsx(CharacterCard,{character:character,onFavorite:handleFavorite,showRemoveButton:false// Adjusting card width and margin\n,minWidth:\"250px\",width:\"100%\",margin:\"auto\"},character.url))}),/*#__PURE__*/_jsxs(Flex,{mt:8,justifyContent:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",onClick:()=>setPage(page-1),disabled:page===1,mx:2,children:\"Previous\"}),/*#__PURE__*/_jsxs(Text,{mx:4,children:[\"Page \",page]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"teal\",onClick:()=>setPage(page+1),mx:2,children:\"Next\"})]})]})});};export default CharactersList;","map":{"version":3,"names":["React","useState","useEffect","Box","SimpleGrid","Button","Flex","useToast","Text","Spinner","axios","CharacterCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CharactersList","characters","setCharacters","page","setPage","loading","setLoading","toast","fetchCharacters","response","get","concat","data","results","window","scrollTo","handleFavorite","character","favorites","JSON","parse","localStorage","getItem","isAlreadyFavorited","some","fav","url","title","status","duration","isClosable","updatedFavorites","setItem","stringify","p","children","justify","align","minHeight","size","columns","spacing","map","onFavorite","showRemoveButton","minWidth","width","margin","mt","justifyContent","alignItems","colorScheme","onClick","disabled","mx"],"sources":["C:/Users/Admin/Desktop/React Project/swapi/src/components/CharacterList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, SimpleGrid, Button, Flex, useToast, Text, Spinner } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport CharacterCard from './CharacterCard ';\r\n\r\nconst CharactersList = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(true); // State to manage loading state\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      setLoading(true); // Set loading to true when fetching data\r\n      const response = await axios.get(`https://swapi.dev/api/people/?page=${page}`);\r\n      setCharacters(response.data.results);\r\n      setLoading(false); // Set loading to false after data is fetched\r\n      window.scrollTo(0, 0); // Scroll to top when page changes\r\n    };\r\n    fetchCharacters();\r\n  }, [page]);\r\n\r\n  const handleFavorite = (character) => {\r\n    // Check if the character is already in favorites\r\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    const isAlreadyFavorited = favorites.some(fav => fav.url === character.url);\r\n\r\n    if (isAlreadyFavorited) {\r\n      toast({\r\n        title: 'Character already favorited',\r\n        status: 'info',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    } else {\r\n      // Add character to favorites\r\n      const updatedFavorites = [...favorites, character];\r\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n\r\n      // Update state or trigger a re-render to reflect the change\r\n      toast({\r\n        title: 'Character added to favorites',\r\n        status: 'success',\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box p={4}>\r\n      {loading ? ( // Display spinner while loading\r\n        <Flex justify=\"center\" align=\"center\" minHeight=\"200px\">\r\n          <Spinner size=\"xl\" />\r\n        </Flex>\r\n      ) : (\r\n        <>\r\n          <SimpleGrid columns={[1, 2, 3, 4]} spacing={8}>\r\n            {characters.map(character => (\r\n              <CharacterCard\r\n                key={character.url}\r\n                character={character}\r\n                onFavorite={handleFavorite}\r\n                showRemoveButton={false}\r\n                // Adjusting card width and margin\r\n                minWidth=\"250px\"\r\n                width=\"100%\"\r\n                margin=\"auto\"\r\n              />\r\n            ))}\r\n          </SimpleGrid>\r\n          <Flex mt={8} justifyContent=\"center\" alignItems=\"center\">\r\n            <Button \r\n              colorScheme=\"teal\" \r\n              onClick={() => setPage(page - 1)} \r\n              disabled={page === 1}\r\n              mx={2}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <Text mx={4}>Page {page}</Text>\r\n            <Button \r\n              colorScheme=\"teal\" \r\n              onClick={() => setPage(page + 1)} \r\n              mx={2}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Flex>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharactersList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}