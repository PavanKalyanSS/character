{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,SimpleGrid,Text}from'@chakra-ui/react';import CharacterCard from'./CharacterCard ';import{jsx as _jsx}from\"react/jsx-runtime\";const FavoritesCharacters=()=>{const[favorites,setFavorites]=useState([]);useEffect(()=>{// Fetch favorites from localStorage on component mount\nconst storedFavorites=JSON.parse(localStorage.getItem('favorites'))||[];setFavorites(storedFavorites);},[]);// Empty dependency array ensures this effect runs only once on mount\nconst removeFromFavorites=characterToRemove=>{// Filter out the character to remove from favorites\nconst updatedFavorites=favorites.filter(character=>character.url!==characterToRemove.url);setFavorites(updatedFavorites);// Update localStorage with updated favorites list\nlocalStorage.setItem('favorites',JSON.stringify(updatedFavorites));};if(favorites.length===0){return/*#__PURE__*/_jsx(Text,{p:4,children:\"No favorite characters found.\"});}return/*#__PURE__*/_jsx(Box,{p:4,children:/*#__PURE__*/_jsx(SimpleGrid,{columns:[1,2,3,4],spacing:8,children:favorites.map(character=>/*#__PURE__*/_jsx(CharacterCard,{character:character,onRemoveFavorite:removeFromFavorites,showRemoveButton:true// Show Remove button for favorites\n},character.url))})});};export default FavoritesCharacters;","map":{"version":3,"names":["React","useState","useEffect","Box","SimpleGrid","Text","CharacterCard","jsx","_jsx","FavoritesCharacters","favorites","setFavorites","storedFavorites","JSON","parse","localStorage","getItem","removeFromFavorites","characterToRemove","updatedFavorites","filter","character","url","setItem","stringify","length","p","children","columns","spacing","map","onRemoveFavorite","showRemoveButton"],"sources":["C:/Users/Admin/Desktop/React Project/swapi/src/components/FavoritesCharacters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, SimpleGrid, Text } from '@chakra-ui/react';\r\nimport CharacterCard from './CharacterCard ';\r\n\r\nconst FavoritesCharacters = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch favorites from localStorage on component mount\r\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    setFavorites(storedFavorites);\r\n  }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n  const removeFromFavorites = (characterToRemove) => {\r\n    // Filter out the character to remove from favorites\r\n    const updatedFavorites = favorites.filter(character => character.url !== characterToRemove.url);\r\n    setFavorites(updatedFavorites);\r\n    \r\n    // Update localStorage with updated favorites list\r\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  if (favorites.length === 0) {\r\n    return <Text p={4}>No favorite characters found.</Text>;\r\n  }\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <SimpleGrid columns={[1, 2, 3, 4]} spacing={8}>\r\n        {favorites.map(character => (\r\n          <CharacterCard\r\n            key={character.url}\r\n            character={character}\r\n            onRemoveFavorite={removeFromFavorites}\r\n            showRemoveButton={true} // Show Remove button for favorites\r\n          />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FavoritesCharacters;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,GAAG,CAAEC,UAAU,CAAEC,IAAI,KAAQ,kBAAkB,CACxD,MAAO,CAAAC,aAAa,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAU,eAAe,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAI,EAAE,CAC3EL,YAAY,CAACC,eAAe,CAAC,CAC/B,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAK,mBAAmB,CAAIC,iBAAiB,EAAK,CACjD;AACA,KAAM,CAAAC,gBAAgB,CAAGT,SAAS,CAACU,MAAM,CAACC,SAAS,EAAIA,SAAS,CAACC,GAAG,GAAKJ,iBAAiB,CAACI,GAAG,CAAC,CAC/FX,YAAY,CAACQ,gBAAgB,CAAC,CAE9B;AACAJ,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAEV,IAAI,CAACW,SAAS,CAACL,gBAAgB,CAAC,CAAC,CACrE,CAAC,CAED,GAAIT,SAAS,CAACe,MAAM,GAAK,CAAC,CAAE,CAC1B,mBAAOjB,IAAA,CAACH,IAAI,EAACqB,CAAC,CAAE,CAAE,CAAAC,QAAA,CAAC,+BAA6B,CAAM,CAAC,CACzD,CAEA,mBACEnB,IAAA,CAACL,GAAG,EAACuB,CAAC,CAAE,CAAE,CAAAC,QAAA,cACRnB,IAAA,CAACJ,UAAU,EAACwB,OAAO,CAAE,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAACC,OAAO,CAAE,CAAE,CAAAF,QAAA,CAC3CjB,SAAS,CAACoB,GAAG,CAACT,SAAS,eACtBb,IAAA,CAACF,aAAa,EAEZe,SAAS,CAAEA,SAAU,CACrBU,gBAAgB,CAAEd,mBAAoB,CACtCe,gBAAgB,CAAE,IAAM;AAAA,EAHnBX,SAAS,CAACC,GAIhB,CACF,CAAC,CACQ,CAAC,CACV,CAAC,CAEV,CAAC,CAED,cAAe,CAAAb,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}