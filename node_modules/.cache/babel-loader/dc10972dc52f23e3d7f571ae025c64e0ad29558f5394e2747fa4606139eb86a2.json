{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React Project\\\\swapi\\\\src\\\\components\\\\FavoritesCharacters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, SimpleGrid, Text } from '@chakra-ui/react';\nimport CharacterCard from './CharacterCard ';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesCharacters = () => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    // Fetch favorites from localStorage on component mount\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(storedFavorites);\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  const removeFromFavorites = characterToRemove => {\n    // Filter out the character to remove from favorites\n    const updatedFavorites = favorites.filter(character => character.url !== characterToRemove.url);\n    setFavorites(updatedFavorites);\n\n    // Update localStorage with updated favorites list\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n  if (favorites.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Text, {\n      p: 4,\n      children: \"No favorite characters found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 4,\n    children: /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: [1, 2, 3, 4],\n      spacing: 8,\n      children: favorites.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        character: character,\n        onRemoveFavorite: removeFromFavorites,\n        showRemoveButton: true // Show Remove button for favorites\n      }, character.url, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritesCharacters, \"gYNGUuNbE7AW8shO5JZPpsJJ/gw=\");\n_c = FavoritesCharacters;\nexport default FavoritesCharacters;\nvar _c;\n$RefreshReg$(_c, \"FavoritesCharacters\");","map":{"version":3,"names":["React","useState","useEffect","Box","SimpleGrid","Text","CharacterCard","jsxDEV","_jsxDEV","FavoritesCharacters","_s","favorites","setFavorites","storedFavorites","JSON","parse","localStorage","getItem","removeFromFavorites","characterToRemove","updatedFavorites","filter","character","url","setItem","stringify","length","p","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","spacing","map","onRemoveFavorite","showRemoveButton","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/React Project/swapi/src/components/FavoritesCharacters.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, SimpleGrid, Text } from '@chakra-ui/react';\r\nimport CharacterCard from './CharacterCard ';\r\n\r\nconst FavoritesCharacters = () => {\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch favorites from localStorage on component mount\r\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n    setFavorites(storedFavorites);\r\n  }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n  const removeFromFavorites = (characterToRemove) => {\r\n    // Filter out the character to remove from favorites\r\n    const updatedFavorites = favorites.filter(character => character.url !== characterToRemove.url);\r\n    setFavorites(updatedFavorites);\r\n    \r\n    // Update localStorage with updated favorites list\r\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  if (favorites.length === 0) {\r\n    return <Text p={4}>No favorite characters found.</Text>;\r\n  }\r\n\r\n  return (\r\n    <Box p={4}>\r\n      <SimpleGrid columns={[1, 2, 3, 4]} spacing={8}>\r\n        {favorites.map(character => (\r\n          <CharacterCard\r\n            key={character.url}\r\n            character={character}\r\n            onRemoveFavorite={removeFromFavorites}\r\n            showRemoveButton={true} // Show Remove button for favorites\r\n          />\r\n        ))}\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FavoritesCharacters;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,kBAAkB;AACxD,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAC3EL,YAAY,CAACC,eAAe,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMK,mBAAmB,GAAIC,iBAAiB,IAAK;IACjD;IACA,MAAMC,gBAAgB,GAAGT,SAAS,CAACU,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,GAAG,KAAKJ,iBAAiB,CAACI,GAAG,CAAC;IAC/FX,YAAY,CAACQ,gBAAgB,CAAC;;IAE9B;IACAJ,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEV,IAAI,CAACW,SAAS,CAACL,gBAAgB,CAAC,CAAC;EACrE,CAAC;EAED,IAAIT,SAAS,CAACe,MAAM,KAAK,CAAC,EAAE;IAC1B,oBAAOlB,OAAA,CAACH,IAAI;MAACsB,CAAC,EAAE,CAAE;MAAAC,QAAA,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACzD;EAEA,oBACExB,OAAA,CAACL,GAAG;IAACwB,CAAC,EAAE,CAAE;IAAAC,QAAA,eACRpB,OAAA,CAACJ,UAAU;MAAC6B,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAACC,OAAO,EAAE,CAAE;MAAAN,QAAA,EAC3CjB,SAAS,CAACwB,GAAG,CAACb,SAAS,iBACtBd,OAAA,CAACF,aAAa;QAEZgB,SAAS,EAAEA,SAAU;QACrBc,gBAAgB,EAAElB,mBAAoB;QACtCmB,gBAAgB,EAAE,IAAK,CAAC;MAAA,GAHnBf,SAAS,CAACC,GAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAInB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCID,mBAAmB;AAAA6B,EAAA,GAAnB7B,mBAAmB;AAsCzB,eAAeA,mBAAmB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}