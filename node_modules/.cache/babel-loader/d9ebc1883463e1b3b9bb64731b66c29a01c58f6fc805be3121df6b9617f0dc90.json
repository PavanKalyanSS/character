{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React Project\\\\swapi\\\\src\\\\components\\\\CharacterDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Box, Image, Text, List, ListItem, Center } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [character, setCharacter] = useState(null);\n  const [films, setFilms] = useState([]);\n  useEffect(() => {\n    const fetchCharacter = async () => {\n      try {\n        const response = await axios.get(`https://swapi.dev/api/people/${id}/`);\n        setCharacter(response.data);\n        const filmRequests = response.data.films.map(url => axios.get(url));\n        const filmResponses = await Promise.all(filmRequests);\n        setFilms(filmResponses.map(res => res.data.title));\n      } catch (error) {\n        console.error('Error fetching character details:', error);\n      }\n    };\n    fetchCharacter();\n  }, [id]);\n  if (!character) return /*#__PURE__*/_jsxDEV(Text, {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Center, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: \"6\",\n      maxW: \"500px\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: `https://starwars-visualguide.com/assets/img/characters/${id}.jpg`,\n        alt: character.name,\n        mb: \"4\",\n        borderRadius: \"md\",\n        maxH: \"300px\",\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: \"bold\",\n        fontSize: \"2xl\",\n        textAlign: \"center\",\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"2\",\n        textAlign: \"center\",\n        children: [\"Height: \", character.height, \" cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"2\",\n        textAlign: \"center\",\n        children: [\"Mass: \", character.mass, \" kg\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"2\",\n        textAlign: \"center\",\n        children: [\"Hair Color: \", character.hair_color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"2\",\n        textAlign: \"center\",\n        children: [\"Skin Color: \", character.skin_color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"2\",\n        textAlign: \"center\",\n        children: [\"Eye Color: \", character.eye_color]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"2\",\n        textAlign: \"center\",\n        children: [\"Birth Year: \", character.birth_year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"2\",\n        textAlign: \"center\",\n        children: [\"Gender: \", character.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"4\",\n        fontWeight: \"bold\",\n        fontSize: \"xl\",\n        textAlign: \"center\",\n        children: \"Films:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        spacing: 2,\n        children: films.map(film => /*#__PURE__*/_jsxDEV(ListItem, {\n          textAlign: \"center\",\n          children: film\n        }, film, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterDetail, \"8GFaLfR0SL4d2L38dRYgMBw7EeY=\", false, function () {\n  return [useParams];\n});\n_c = CharacterDetail;\nexport default CharacterDetail;\nvar _c;\n$RefreshReg$(_c, \"CharacterDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Box","Image","Text","List","ListItem","Center","jsxDEV","_jsxDEV","CharacterDetail","_s","id","character","setCharacter","films","setFilms","fetchCharacter","response","get","data","filmRequests","map","url","filmResponses","Promise","all","res","title","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","p","maxW","src","alt","name","mb","borderRadius","maxH","objectFit","fontWeight","fontSize","textAlign","mt","height","mass","hair_color","skin_color","eye_color","birth_year","gender","spacing","film","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/React Project/swapi/src/components/CharacterDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Box, Image, Text, List, ListItem, Center } from '@chakra-ui/react';\r\n\r\nconst CharacterDetail = () => {\r\n  const { id } = useParams();\r\n  const [character, setCharacter] = useState(null);\r\n  const [films, setFilms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCharacter = async () => {\r\n      try {\r\n        const response = await axios.get(`https://swapi.dev/api/people/${id}/`);\r\n        setCharacter(response.data);\r\n\r\n        const filmRequests = response.data.films.map(url => axios.get(url));\r\n        const filmResponses = await Promise.all(filmRequests);\r\n        setFilms(filmResponses.map(res => res.data.title));\r\n      } catch (error) {\r\n        console.error('Error fetching character details:', error);\r\n      }\r\n    };\r\n    fetchCharacter();\r\n  }, [id]);\r\n\r\n  if (!character) return <Text>Loading...</Text>;\r\n\r\n  return (\r\n    <Center>\r\n      <Box p=\"6\" maxW=\"500px\">\r\n        <Image\r\n          src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n          alt={character.name}\r\n          mb=\"4\"\r\n          borderRadius=\"md\"\r\n          maxH=\"300px\"\r\n          objectFit=\"cover\"\r\n        />\r\n        <Text fontWeight=\"bold\" fontSize=\"2xl\" textAlign=\"center\">{character.name}</Text>\r\n        <Text mt=\"2\" textAlign=\"center\">Height: {character.height} cm</Text>\r\n        <Text mt=\"2\" textAlign=\"center\">Mass: {character.mass} kg</Text>\r\n        <Text mt=\"2\" textAlign=\"center\">Hair Color: {character.hair_color}</Text>\r\n        <Text mt=\"2\" textAlign=\"center\">Skin Color: {character.skin_color}</Text>\r\n        <Text mt=\"2\" textAlign=\"center\">Eye Color: {character.eye_color}</Text>\r\n        <Text mt=\"2\" textAlign=\"center\">Birth Year: {character.birth_year}</Text>\r\n        <Text mt=\"2\" textAlign=\"center\">Gender: {character.gender}</Text>\r\n        <Text mt=\"4\" fontWeight=\"bold\" fontSize=\"xl\" textAlign=\"center\">Films:</Text>\r\n        <List spacing={2}>\r\n          {films.map(film => (\r\n            <ListItem key={film} textAlign=\"center\">{film}</ListItem>\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}